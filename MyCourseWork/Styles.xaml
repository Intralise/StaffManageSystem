
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MyCourseWork"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style x:Key="NoChromeButtonExit" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="BlackTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Opacity" Value="0.5"></Setter>
        <Setter Property="Background" Value="#FF07090A"></Setter>
        <Setter Property="BorderBrush" Value="#FFAFB1B2"></Setter>
        <Setter Property="FontFamily" Value="Times New Roman"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
    </Style>

	<Style x:Key="BlackText" TargetType="{x:Type TextBlock}">
		<Setter Property="Opacity" Value="0.5"></Setter>
		<Setter Property="Background" Value="#FF07090A"></Setter>
		<Setter Property="FontFamily" Value="Times New Roman"></Setter>
		<Setter Property="VerticalAlignment" Value="Top"></Setter>
		<Setter Property="HorizontalAlignment" Value="Left"></Setter>
		<Setter Property="Foreground" Value="#ffffff"></Setter>
	</Style>

	<Style x:Key="BlueTextBox" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="#FF00aeff"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Open sans"></Setter>
    </Style>


    <Style x:Key="BlackComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Opacity" Value="0.5"></Setter>
        <Setter Property="Background" Value="#FF07090A"></Setter>
        <Setter Property="BorderBrush" Value="#FFAFB1B2"></Setter>
        <Setter Property="FontFamily" Value="Times New Roman"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
    </Style>

    <Style x:Key="BlueDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Opacity" Value="1"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="#FFAFB1B2"></Setter>
        <Setter Property="FontFamily" Value="Times New Roman"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="HorizontalGridLinesBrush" Value="#0c5783"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="#0c5783"></Setter>
    </Style>


    <Style x:Key="BlueDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Foreground" Value="#FF0E86CA"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="TextElement.FontSize" Value="13"/>
    </Style>




    <Style x:Key="BlueDataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="BorderBrush" Value="#FFAFB1B2"/>
        <Setter Property="Foreground" Value="#999999"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        
    </Style>


    <Style x:Key = "BlueLink" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value ="Transparent"></Setter>
        <Setter Property="Foreground" Value="#FF0E86CA"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="LinkOut"/>
                    <BeginStoryboard x:Name ="LinkIn">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3" 
                                                          Storyboard.TargetProperty="Foreground.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3"
                                                     Value="White"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="LinkIn"/>
                    <BeginStoryboard x:Name ="LinkOut">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3"
                                                          Storyboard.TargetProperty="Foreground.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3"
                                                     Value="#FF0E86CA"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ErrorTextBox" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFEA1717"></Setter>
        <Setter Property="VerticalAlignment" Value ="Top"></Setter>
        <Setter Property="FontFamily" Value="Times New Roman"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0" To="1.0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="1.0" To="0.0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoChromeButtonAuth" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FF0E86CA"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="Out"/>
                    <BeginStoryboard x:Name ="In">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="DeepSkyBlue"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="In"/>
                    <BeginStoryboard x:Name ="Out">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3" Storyboard.TargetProperty="Background.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0E86CA"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key = "MainMenuPointBackground" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Opacity" Value="0.15"></Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="LinkOutOpacity"/>
                    <BeginStoryboard x:Name ="LinkInOpacity">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="0.15" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="LinkInOpacity"/>
                    <BeginStoryboard x:Name ="LinkOutOpacity">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.15" To="0.0" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>-->
        </Style>
        
        <Style x:Key="BlackButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Black"></Setter>
        <Setter Property="Foreground" Value="#FF0E86CA"></Setter>
        <Setter Property="BorderBrush" Value="#FF0E86CA"></Setter>
        <Setter Property="BorderThickness" Value="10px"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="Out"/>
                    <BeginStoryboard x:Name ="In">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0E86CA"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="In"/>
                    <BeginStoryboard x:Name ="Out">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF0D639F"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>





    <Style x:Key = "MainMenuPoint" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value ="Transparent"></Setter>
        <Setter Property="BorderBrush" Value ="Transparent"></Setter>
        <Setter Property="Foreground" Value="#FF00aeff"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Open sans"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="LinkOut"/>
                    <BeginStoryboard x:Name ="LinkIn">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="White"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="LinkIn"/>
                    <BeginStoryboard x:Name ="LinkOut">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF00aeff"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key = "MainMenuPointWithntTriggers" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value ="Transparent"></Setter>
        <Setter Property="BorderBrush" Value ="Transparent"></Setter>
        <Setter Property="Foreground" Value="#FF00aeff"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Open sans"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key = "UserSettingPoint" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value ="Transparent"></Setter>
        <Setter Property="BorderBrush" Value ="Transparent"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontFamily" Value="Open sans"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>